from prompt_toolkit.keys import Keys
from prompt_toolkit.filters import Condition, EmacsInsertMode, ViInsertMode

aliases['g'] = 'git status -sb'
aliases['c'] = 'cd'
aliases['p'] = 'ls -lah'

fuzzy_exclude = [ "-path", "*/.*", "-prune", "-o"]

#@aliases.register
#@aliases.return_command
#def _c(args):
#    return [ 'cd' ] + args + [ '&&', 'ls', '-lah' ]

execx($(starship init xonsh))

def fcd():
    dir = $(find ~ @(fuzzy_exclude) -type d -printf '%P\n' | fzf)
    path = $(readlink -f ~/@(dir) | tr -d '\n\r')
    cd @(path) && ls -lah

def fcp():
    path = $(find ~ @(fuzzy_exclude) -printf '%P\n' | fzf)
    path = $(readlink -f ~/@(path))
    echo @(path) | tr -d '\r\n' | wl-copy

def fop():
    file = $(find ~ @(fuzzy_exclude) -type f -printf '%P\n' | fzf)
    file = $(readlink -f ~/@(file) | tr -d '\r\n' )
    xdg-open @(file)

@events.on_ptk_create
def custom_keybindings(bindings, **kw):

    @bindings.add("c-w")
    def cw(event):
        fcd()
        event.cli.renderer.erase()

    @bindings.add("c-p")
    def cp(event):
        fcp()
        event.cli.renderer.erase()

    @bindings.add("c-f")
    def cp(event):
        fop()
        event.cli.renderer.erase()

